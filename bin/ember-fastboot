#!/usr/bin/env node
'use strict';

/* eslint-env node */
const FastBootAppServer = require('fastboot-app-server');
const ExpressHTTPServer = require('fastboot-app-server/src/express-http-server');
const parseArgs = require('minimist');
const { URL } = require('url');

// Provide a title to the process in `ps`
process.title = 'ember-fastboot-server';

let argOptions = {
  default: { port: 3000, host: '::' }
};

let options = parseArgs(process.argv.slice(2), argOptions);
let distPath = options._[0];

if (!distPath) {
  console.error(
    `You must call ember-fastboot with the path of a fastboot-dist directory:
     ember-fastboot fastboot-dist`
  );
  process.exit(1);
}

const serverOptions = {
  // assetsCacheControl: 'max-age=365000000, immutable',
  distPath,
  gzip: false, // Let Fastly take care of compression, reducing load on the fastboot
};

const httpServer = new ExpressHTTPServer(serverOptions);

const app = httpServer.app;

/** We rewrite the 307 location header into a relativeURL so that our special setup is handled */
app.use(function(req, res, next) {
  const originalSendFn = res.send;
  res.send = function(data) {
    if (res.hasHeader('location')) {
      const originalLocation = res.getHeader('location');
      const relativeURL = new URL(originalLocation).pathname;
      res.setHeader('location', relativeURL);
      arguments[0] = arguments[0].replace(new RegExp(originalLocation, 'g'), relativeURL);
    }
    originalSendFn.apply(res, arguments);
  }
  res.removeHeader('X-Powered-By');
  next();
});

let server = new FastBootAppServer(Object.assign({ httpServer }, serverOptions));

server.start();
