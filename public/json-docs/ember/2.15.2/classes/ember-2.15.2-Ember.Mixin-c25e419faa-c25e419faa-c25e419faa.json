{
  "data": {
    "id": "ember-2.15.2-Ember.Mixin",
    "type": "class",
    "attributes": {
      "name": "Ember.Mixin",
      "shortname": "Ember.Mixin",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "ember",
      "submodule": "ember-metal",
      "namespace": "Ember",
      "file": "packages/ember-metal/lib/mixin.js",
      "line": 408,
      "description": "<html><head></head><body><p>The <code>Ember.Mixin</code> class allows you to create mixins, whose properties can be\nadded to other classes. For instance,</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">const</span> EditableMixin = Ember.Mixin.create({\n  edit() {\n    console.<span class=\"built_in\">log</span>(<span class=\"string\">&apos;starting to edit&apos;</span>);\n    <span class=\"keyword\">this</span>.<span class=\"built_in\">set</span>(<span class=\"string\">&apos;isEditing&apos;</span>, <span class=\"keyword\">true</span>);\n  },\n  isEditing: <span class=\"keyword\">false</span>\n});\n\n<span class=\"comment\">// Mix mixins into classes by passing them as the first arguments to</span>\n<span class=\"comment\">// `.extend.`</span>\n<span class=\"keyword\">const</span> Comment = Ember.<span class=\"keyword\">Object</span>.extend(EditableMixin, {\n  post: <span class=\"keyword\">null</span>\n});\n\nlet comment = Comment.create({\n  post: somePost\n});\n\ncomment.edit(); <span class=\"comment\">// outputs &apos;starting to edit&apos;</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n<p>Note that Mixins are created with <code>Ember.Mixin.create</code>, not\n<code>Ember.Mixin.extend</code>.</p>\n<p>Note that mixins extend a constructor&apos;s prototype so arrays and object literals\ndefined as properties will be shared amongst objects that implement the mixin.\nIf you want to define a property in a mixin that is not shared, you can define\nit either as a computed property or have it be created on initialization of the object.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td>\n              <td class=\"code\"><pre>// filters<span class=\"built_in\"> array </span>will be shared amongst any object implementing mixin<span class=\"built_in\">\nconst </span>FilterableMixin = Ember.Mixin.create({\n  filters: Ember.A()\n});\n\n// filters will be a separate<span class=\"built_in\"> array </span>for every object implementing the mixin<span class=\"built_in\">\nconst </span>FilterableMixin = Ember.Mixin.create({\n  filters: Ember.computed(function() {\n   <span class=\"built_in\"> return </span>Ember.A();\n  })\n});\n\n// filters will be created as a separate<span class=\"built_in\"> array </span>during the object&apos;s initialization<span class=\"built_in\">\nconst </span>Filterable = Ember.Mixin.create({\n  init() {\n    this._super(...arguments);\n    this.set(<span class=\"string\">&quot;filters&quot;</span>, Ember.A());\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
      "access": "public",
      "tagname": "",
      "version": "2.15.2",
      "since": "2.15.2",
      "methods": [
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 501,
          "itemtype": "method",
          "name": "create",
          "static": 1,
          "params": [
            {
              "name": "arguments",
              "description": "",
              "multiple": true
            }
          ],
          "access": "public",
          "tagname": "",
          "class": "Ember.Mixin",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "version": "2.15.2",
          "since": "2.15.2"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 546,
          "itemtype": "method",
          "name": "reopen",
          "params": [
            {
              "name": "arguments",
              "description": "",
              "multiple": true
            }
          ],
          "access": "private",
          "tagname": "",
          "class": "Ember.Mixin",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "version": "2.15.2",
          "since": "2.15.2"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 583,
          "itemtype": "method",
          "name": "apply",
          "params": [
            {
              "name": "obj",
              "description": ""
            }
          ],
          "return": {
            "description": "applied object"
          },
          "access": "private",
          "tagname": "",
          "class": "Ember.Mixin",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "version": "2.15.2",
          "since": "2.15.2"
        },
        {
          "file": "packages/ember-metal/lib/mixin.js",
          "line": 614,
          "itemtype": "method",
          "name": "detect",
          "params": [
            {
              "name": "obj",
              "description": ""
            }
          ],
          "return": {
            "description": "",
            "type": "Boolean"
          },
          "access": "private",
          "tagname": "",
          "class": "Ember.Mixin",
          "module": "ember",
          "submodule": "ember-metal",
          "namespace": "Ember",
          "version": "2.15.2",
          "since": "2.15.2"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": [
          {
            "type": "class",
            "id": "ember-2.15.2-Ember.TargetActionSupport"
          },
          {
            "type": "class",
            "id": "ember-2.15.2-Ember.TextSupport"
          }
        ]
      },
      "module": {
        "data": {
          "id": "ember-2.15.2-ember",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.15.2",
          "type": "project-version"
        }
      }
    }
  }
}