{
  "data": {
    "id": "ember-2.16.0-@ember/array",
    "type": "class",
    "attributes": {
      "name": "@ember/array",
      "shortname": "@ember/array",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "@ember/utils",
      "namespace": "",
      "version": "2.16.0",
      "since": "2.16.0",
      "methods": [
        {
          "file": "packages/ember-runtime/lib/system/native_array.js",
          "line": 106,
          "description": "<html><head></head><body><p>Creates an <code>Ember.NativeArray</code> from an Array like object.\nDoes not modify the original object&apos;s contents. Ember.A is not needed if\n<code>EmberENV.EXTEND_PROTOTYPES</code> is <code>true</code> (the default value). However,\nit is recommended that you use Ember.A when creating addons for\nember or when you can not guarantee that <code>EmberENV.EXTEND_PROTOTYPES</code>\nwill be <code>true</code>.</p>\n<p>Example</p>\n<div class=\"highlight component.js\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <thead>\n            <tr>\n              <td colspan=\"2\">component.js</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td>\n              <td class=\"code\"><pre><span class=\"keyword\">import</span> Component from <span class=\"string\">&apos;@ember/component&apos;</span>;\n\nexport <span class=\"keyword\">default</span> Component.extend({\n  tagName: <span class=\"string\">&apos;ul&apos;</span>,\n  classNames: [<span class=\"string\">&apos;pagination&apos;</span>],\n\n  init() {\n    <span class=\"keyword\">this</span>._super(...arguments);\n\n    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.<span class=\"keyword\">get</span>(<span class=\"string\">&apos;content&apos;</span>)) {\n      <span class=\"keyword\">this</span>.<span class=\"keyword\">set</span>(<span class=\"string\">&apos;content&apos;</span>, Ember.A());\n    }\n  }\n});</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "A",
          "static": 1,
          "return": {
            "description": "",
            "type": "EmberArray"
          },
          "access": "public",
          "tagname": "",
          "class": "@ember/array",
          "module": "@ember/array",
          "version": "2.16.0",
          "since": "2.16.0"
        },
        {
          "file": "packages/ember-runtime/lib/utils.js",
          "line": 23,
          "description": "<html><head></head><body><p>Returns true if the passed object is an array or Array-like.</p>\n<p>Objects are considered Array-like if any of the following are true:</p>\n<ul>\n<li>the object is a native Array</li>\n<li>the object has an objectAt property</li>\n<li>the object is an Object, and has a length property</li>\n</ul>\n<p>Unlike <code>Ember.typeOf</code> this method returns true even if the passed object is\nnot formally an array but appears to be array-like (i.e. implements <code>Ember.Array</code>)</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n</pre></td>\n              <td class=\"code\"><pre><span class=\"selector-tag\">Ember</span><span class=\"selector-class\">.isArray</span>();                                          <span class=\"comment\">// false</span>\n<span class=\"selector-tag\">Ember</span><span class=\"selector-class\">.isArray</span>([]);                                        <span class=\"comment\">// true</span>\n<span class=\"selector-tag\">Ember</span><span class=\"selector-class\">.isArray</span>(Ember.ArrayProxy.create({ <span class=\"attribute\">content</span>: [] }));  <span class=\"comment\">// true</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "isArray",
          "static": 1,
          "params": [
            {
              "name": "obj",
              "description": "The object to test",
              "type": "Object"
            }
          ],
          "return": {
            "description": "true if the passed object is an array or Array-like",
            "type": "Boolean"
          },
          "access": "public",
          "tagname": "",
          "class": "@ember/array",
          "module": "@ember/array",
          "version": "2.16.0",
          "since": "2.16.0"
        },
        {
          "file": "packages/ember-utils/lib/make-array.js",
          "line": 5,
          "description": "<html><head></head><body><p>Forces the passed object to be part of an array. If the object is already\nan array, it will return the object. Otherwise, it will add the object to\nan array. If obj is <code>null</code> or <code>undefined</code>, it will return an empty array.</p>\n<div class=\"highlight javascript\">\n      <div class=\"ribbon\"></div>\n      <div class=\"scroller\">\n        <table class=\"CodeRay\">\n          <tbody>\n            <tr>\n              <td class=\"line-numbers\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td>\n              <td class=\"code\"><pre>Ember.makeArray();            <span class=\"comment\">// []</span>\nEmber.makeArray(<span class=\"literal\">null</span>);        <span class=\"comment\">// []</span>\nEmber.makeArray(<span class=\"literal\">undefined</span>);   <span class=\"comment\">// []</span>\nEmber.makeArray(<span class=\"string\">&apos;lindsay&apos;</span>);   <span class=\"comment\">// [&apos;lindsay&apos;]</span>\nEmber.makeArray([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">42</span>]);  <span class=\"comment\">// [1, 2, 42]</span>\n\n<span class=\"keyword\">let</span> controller = Ember.ArrayProxy.create({ <span class=\"attr\">content</span>: [] });\n\nEmber.makeArray(controller) === controller;  <span class=\"comment\">// true</span></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    \n</body></html>",
          "itemtype": "method",
          "name": "makeArray",
          "static": 1,
          "params": [
            {
              "name": "obj",
              "description": "the object",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Array"
          },
          "access": "private",
          "tagname": "",
          "class": "@ember/array",
          "module": "@ember/array",
          "version": "2.16.0",
          "since": "2.16.0"
        }
      ],
      "events": [],
      "properties": []
    },
    "relationships": {
      "parent-class": {
        "data": null
      },
      "descendants": {
        "data": []
      },
      "module": {
        "data": {
          "id": "ember-2.16.0-@ember/utils",
          "type": "module"
        }
      },
      "project-version": {
        "data": {
          "id": "ember-2.16.0",
          "type": "project-version"
        }
      }
    }
  }
}