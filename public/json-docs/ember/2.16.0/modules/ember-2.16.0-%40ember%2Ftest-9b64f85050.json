{
  "data": {
    "id": "ember-2.16.0-@ember/test",
    "type": "module",
    "attributes": {
      "name": "@ember/test",
      "submodules": {},
      "elements": {},
      "fors": {
        "@ember/test": 1,
        "Ember.Test": 1
      },
      "namespaces": {
        "Ember.Test": 1,
        "Ember": 1
      },
      "tag": "module",
      "file": "packages/ember-testing/lib/adapters/qunit.js",
      "line": 4,
      "parent": null,
      "publicclasses": [
        "Adapter",
        "Ember.Test.QUnitAdapter"
      ],
      "privateclasses": [],
      "staticfunctions": {
        "@ember/test": [
          {
            "file": "packages/ember-testing/lib/test/waiters.js",
            "line": 81,
            "description": "Iterates through each registered test waiter, and invokes\nits callback. If any waiter returns false, this method will return\ntrue indicating that the waiters have not settled yet.\n\nThis is generally used internally from the acceptance/integration test\ninfrastructure.",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "checkWaiters",
            "class": "@ember/test",
            "module": "@ember/test",
            "version": "2.16.0",
            "since": "2.16.0"
          },
          {
            "file": "packages/ember-testing/lib/test/helpers.js",
            "line": 8,
            "description": "`registerHelper` is used to register a test helper that will be injected\nwhen `App.injectTestHelpers` is called.\n\nThe helper method will always be called with the current Application as\nthe first parameter.\n\nFor example:\n\n```javascript\nEmber.Test.registerHelper('boot', function(app) {\n  Ember.run(app, app.advanceReadiness);\n});\n```\n\nThis helper can later be called without arguments because it will be\ncalled with `app` as the first parameter.\n\n```javascript\nApp = Ember.Application.create();\nApp.injectTestHelpers();\nboot();\n```",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "registerHelper",
            "params": [
              {
                "name": "name",
                "description": "The name of the helper method to add.",
                "type": "String"
              },
              {
                "name": "helperMethod",
                "description": "",
                "type": "Function"
              },
              {
                "name": "options",
                "description": "",
                "type": "Object"
              }
            ],
            "class": "@ember/test",
            "module": "@ember/test",
            "version": "2.16.0",
            "since": "2.16.0"
          },
          {
            "file": "packages/ember-testing/lib/test/waiters.js",
            "line": 9,
            "description": "This allows ember-testing to play nicely with other asynchronous\nevents, such as an application that is waiting for a CSS3\ntransition or an IndexDB transaction. The waiter runs periodically\nafter each async helper (i.e. `click`, `andThen`, `visit`, etc) has executed,\nuntil the returning result is truthy. After the waiters finish, the next async helper\nis executed and the process repeats.\n\nFor example:\n\n```javascript\nEmber.Test.registerWaiter(function() {\n  return myPendingTransactions() == 0;\n});\n```\nThe `context` argument allows you to optionally specify the `this`\nwith which your callback will be invoked.\n\nFor example:\n\n```javascript\nEmber.Test.registerWaiter(MyDB, MyDB.hasPendingTransactions);\n```",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "registerWaiter",
            "params": [
              {
                "name": "context",
                "description": "(optional)",
                "type": "Object"
              },
              {
                "name": "callback",
                "description": "",
                "type": "Function"
              }
            ],
            "since": "2.16.0",
            "class": "@ember/test",
            "module": "@ember/test",
            "version": "2.16.0"
          },
          {
            "file": "packages/ember-testing/lib/test/helpers.js",
            "line": 95,
            "description": "Remove a previously added helper method.\n\nExample:\n\n```javascript\nEmber.Test.unregisterHelper('wait');\n```",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "unregisterHelper",
            "static": 1,
            "params": [
              {
                "name": "name",
                "description": "The helper to remove.",
                "type": "String"
              }
            ],
            "class": "@ember/test",
            "module": "@ember/test",
            "version": "2.16.0",
            "since": "2.16.0"
          },
          {
            "file": "packages/ember-testing/lib/test/waiters.js",
            "line": 53,
            "description": "`unregisterWaiter` is used to unregister a callback that was\nregistered with `registerWaiter`.",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "unregisterWaiter",
            "params": [
              {
                "name": "context",
                "description": "(optional)",
                "type": "Object"
              },
              {
                "name": "callback",
                "description": "",
                "type": "Function"
              }
            ],
            "since": "2.16.0",
            "class": "@ember/test",
            "module": "@ember/test",
            "version": "2.16.0"
          }
        ]
      },
      "version": "2.16.0"
    },
    "relationships": {
      "classes": {
        "data": []
      },
      "project-version": {
        "data": {
          "id": "ember-2.16.0",
          "type": "project-version"
        }
      }
    }
  }
}